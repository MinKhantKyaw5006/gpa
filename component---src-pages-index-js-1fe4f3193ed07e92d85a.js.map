{"version":3,"file":"component---src-pages-index-js-1fe4f3193ed07e92d85a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport Select from 'react-select'\r\nimport { useLocalStorage } from \"react-use\"\r\nimport AverageGPA from \"../components/averageGPA\"\r\nimport CreateSemsterForm from \"../components/createSemsterForm\"\r\nimport SemsterGPA from \"../components/semsterGPA\"\r\nimport Subject from \"../components/subjects\"\r\nimport { curriculum } from './cs-2019.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction IndexPage() {\r\n  const options = [\r\n    { value: 'cs', label: 'CS' },\r\n    { value: 'it', label: 'IT' },\r\n  ]\r\n\r\n  const GPA = [\r\n    { value: 4, label: 'A' },\r\n    { value: 3.75, label: 'A-' },\r\n    { value: 3.25, label: 'B+' },\r\n    { value: 2.75, label: 'B-' },\r\n    { value: 2.25, label: 'C+' },\r\n    { value: 2, label: 'C' },\r\n    { value: 1.75, label: 'C-' },\r\n    { value: 1, label: 'D' },\r\n    { value: 0, label: 'F' },\r\n    { value: null, label: 'W' },\r\n  ]\r\n\r\n  const [data, SetData] = useState([])\r\n  const [subject, SetSubject] = useState({})\r\n  const [myGPA, SetMyGPA] = useState([])\r\n  const [result, SetResult] = useState(0)\r\n  const [semsters, SetSemster] = useLocalStorage('semsters', [])\r\n  const [overallGPA, SetOverallGPA] = useState(0)\r\n  const [major, SetMajor] = useState('')\r\n\r\n  const handleChange = event => {\r\n    if (event.value == \"cs\") {\r\n      SetData(curriculum[0].courses.map(group => {\r\n        return { value: group.groupName, label: group.groupName, subjects: group.subjects };\r\n      }))\r\n      SetMajor('CS')\r\n    }\r\n    else {\r\n      SetData(curriculum[1].courses.map(group => {\r\n        return { value: group.groupName, label: group.groupName, subjects: group.subjects };\r\n      }))\r\n      SetMajor('IT')\r\n    }\r\n  };\r\n\r\n  const groupChange = event => {\r\n    SetSubject(event.subjects.map(sub => {\r\n      return { value: sub.code, label: sub.name, credit: sub.credit }\r\n    }))\r\n  }\r\n\r\n  const subChange = event => {\r\n    let filterS = semsters.filter(o => o.myGPA.map(s => s.sub).includes(event.label))\r\n\r\n    if (myGPA.length < 7 && (!myGPA.map(o => o.sub).includes(event.label)) && (filterS.length == 0)) {\r\n      SetMyGPA(current => [...current, { sub: event.label, code: event.value, credit: event.credit, grade: 0 }])\r\n    }\r\n  }\r\n\r\n  const selectGPA = sub => event => {\r\n    sub.grade = event.value\r\n\r\n    SetMyGPA(myGPA.map(m => {\r\n      return m.sub == sub.sub ? sub : m\r\n    }))\r\n  }\r\n\r\n  const average = grades => {\r\n    let tCredits = grades.map(val => val.credit)\r\n    let tGPA = grades.map(val => val.grade)\r\n\r\n    return (tCredits.reduce((r, a, i) => r + a * tGPA[i], 0) / tCredits.reduce((r, a) => r + a, 0)).toFixed(2)\r\n  }\r\n\r\n  const calOverAllGPA = sem => {\r\n    let gpaList = sem.map(ob => parseFloat(ob.avgGPA))\r\n\r\n    return (gpaList.reduce((a, b) => a + b, 0) / gpaList.length).toFixed(2)\r\n  }\r\n\r\n  const createSemster = event => {\r\n    event.preventDefault()\r\n\r\n    if (event.target.name.value.length >= 3) {\r\n      SetSemster([...semsters, { sem: event.target.name.value, avgGPA: result, myGPA }])\r\n\r\n      SetMyGPA([])\r\n\r\n      event.target.name.value = ''\r\n    }\r\n\r\n  }\r\n\r\n  const clearStorage = () => {\r\n    SetSemster([])\r\n  }\r\n\r\n  useEffect(() => {\r\n    SetResult(average(myGPA))\r\n    SetOverallGPA(calOverAllGPA(semsters))\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"fw-normal\">GPA Tracker <button className=\"btn btn-success\" onClick={clearStorage}>Clear</button> </h2>\r\n\r\n      <h1 class=\"text-center bg-success text-white p-3 rounded\">Welcome to GPA Tracker Page!</h1>\r\n\r\n\r\n      <h6>You can start by chosing you major</h6>\r\n      {!subject.length ?\r\n        <Select\r\n          options={options}\r\n          placeholder=\"Choose Major\"\r\n          onChange={handleChange}\r\n\r\n        />\r\n        :\r\n        <h3>Major : {major}</h3>\r\n\r\n      }\r\n\r\n\r\n        \r\n  <p class=\"fw-normal\">Please Manually select the subjects. The subjects you choose will be added to the list. Please choose at least 4 subjects to calculate your GPA. Taken subjects cannot be selected again.</p>\r\n\r\n\r\n\r\n\r\n      <Select\r\n        options={data}\r\n        placeholder=\"Choose Group\"\r\n        onChange={groupChange}\r\n      />\r\n\r\n      {subject.length &&\r\n        <Select\r\n          options={subject}\r\n          placeholder=\"Choose Subject\"\r\n          onChange={subChange}\r\n        />\r\n      }\r\n\r\n      <Subject myGPA={myGPA} GPA={GPA} selectGPA={selectGPA} />\r\n\r\n      <AverageGPA myGPA={myGPA} result={result} />\r\n\r\n      <CreateSemsterForm myGPA={myGPA} createSemster={createSemster} />\r\n\r\n      {/* <Subject myGPA={myGPA} GPA={GPA} selectGPA={selectGPA} /> */}\r\n\r\n      {/* <AverageGPA myGPA={myGPA} result={result} /> */}\r\n\r\n      {/* <CreateSemsterForm myGPA={myGPA} createSemster={createSemster}/> */}\r\n\r\n      {/* <SemsterGPA semsters={semsters} /> */}\r\n      <SemsterGPA semsters={semsters} />\r\n      {\r\n        semsters.length != 0 &&\r\n        <h2>Overall GPA - {overallGPA} </h2>\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"names":["data","SetData","useState","subject","SetSubject","myGPA","SetMyGPA","result","SetResult","semsters","SetSemster","useLocalStorage","overallGPA","SetOverallGPA","major","SetMajor","useEffect","grades","tCredits","map","val","credit","tGPA","grade","reduce","r","a","i","toFixed","average","sem","gpaList","ob","parseFloat","avgGPA","b","length","calOverAllGPA","className","onClick","class","options","value","label","placeholder","onChange","event","curriculum","group","groupName","subjects","sub","code","name","filterS","filter","o","s","includes","current","GPA","selectGPA","m","createSemster","preventDefault","target"],"sourceRoot":""}